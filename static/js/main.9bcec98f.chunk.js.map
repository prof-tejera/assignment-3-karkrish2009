{"version":3,"sources":["timer/TimerProvider.js","timer/Button.js","timer/DisplayClock.js","timer/Timer.js","timer/TimerBlog.js","timer/ExecuteWorkout.js","nav/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["TimerContext","React","createContext","Workout","react_default","a","createElement","TimerProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","queue","setQueue","Provider","value","addTimer","item","q","concat","toConsumableArray","console","log","id","xtime","ytime","countdown","removeTimer","index","filter","i","executeWorkout","TimerProvider_Workout","Button","onClick","DisplayClock","remainingTime","time","minute","Math","floor","second","getSeconds","microsecond","getMicroseconds","minString","toString","slice","secondString","microsecondString","style","fontSize","Timer","final_time","xTime","setXTime","_useState3","_useState4","timerOn","setTimerOn","_useState5","_useState6","phase","setPhase","_useState7","_useState8","yTime","setYTime","yExists","current_phase","useRef","useEffect","interval","runx","runy","current","setInterval","clearInterval","key","timer_DisplayClock","timer_Button","TimerBlog","_useContext","useContext","length","random","indexToRemove","map","t","timer_Timer","CreateWorkOut","TimerBlog_TimerBlog","activeIndex","setActiveIndex","_useState9","_useState10","_useState11","_useState12","finalTime","setFinalTime","_useState13","_useState14","setCountdown","_useState15","_useState16","clockCounter","setClockCounter","new_clock","y_exists","currentXTime","currentYTime","currentCountdown","ExecuteWorkout","ExecuteWorkout_Workout","NavBar","className","dist","to","App","timer_TimerProvider","nav_NavBar","react_router_dist","exact","path","element","timer_TimerBlog","timer_ExecuteWorkout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9bcec98f.chunk.js","sourcesContent":["import React, {useState} from 'react';\n//import {gql, useMutation} from '@apollo/client';\n//import {CREATE_TIMER} from './Queries';\n\n\nexport const TimerContext = React.createContext({});\n\nconst TimerProvider = ({ children }) => {\n  const [queue, setQueue] = useState([]);\n\n  return (\n    <TimerContext.Provider\n      value={{\n        queue,\n        addTimer: (item) => {\n          setQueue(q => [...q, item]);\n          console.log(\"Timer Data\");\n          console.log(item.id);\n          console.log(item.xtime);\n          console.log(item.ytime);\n          console.log(item.countdown);\n          //const [createTimer, {item, loading, error}] = useMutation(CREATE_TIMER);\n          //console.log(\"loading\", loading);\n          //console.log(\"error\", error);\n        },\n        removeTimer: (index) => {\n          console.log(\"index is \", queue[index]);\n          setQueue(q => q.filter((q,i) => i !== index));\n        },\n        executeWorkout: () => {\n          return(\n            <Workout />\n          );\n        },\n      }}\n    >\n      {children}\n    </TimerContext.Provider>\n  );\n\n};\n\nconst Workout = () => {\n  return (\n    <div>Hello All</div>\n  )\n}\n\nexport default TimerProvider;\n","//import { useContext, useEffect, useState, useRef } from 'react';\n//import { TimerContext } from './TimerProvider';\nimport React from 'react';\n\n\nconst Button = ({onClick, children}) => {\n  return <button onClick={onClick}>{children}</button>;\n}\n\nexport default Button;\n","//import { useContext, useEffect, useState, useRef } from 'react';\n//import { TimerContext } from './TimerProvider';\n\n\nimport React from 'react';\n\n\n\n\n\nconst getMinutes = (remainingTime) => {\n  return Math.floor((remainingTime)/(60*1000));\n}\n\nconst getSeconds = (remainingTime) => {\n  return Math.floor((remainingTime%(60*1000))/1000);\n}\n\nconst getMicroseconds = (remainingTime) => {\n  return Math.floor((remainingTime%(1000))/10);\n}\n\nconst DisplayClock = ({time}) => {\n\n  const minute = getMinutes(time);\n  const second = getSeconds(time);\n  const microsecond = getMicroseconds(time);\n\n  let minString = ('0' + minute.toString()).slice(-2);\n  let secondString = ('0' + second.toString()).slice(-2);\n  let microsecondString = ('0' + microsecond.toString()).slice(-2);\n\n\n  return (\n    <div style={{fontSize: '20px'}}>\n    <span>{minString}: {secondString}: {microsecondString}</span>\n    </div>\n  );\n\n}\n\nexport default DisplayClock;\n","import React, { useEffect, useState, useRef } from 'react';\n//import { TimerContext } from './TimerProvider';\n//import { TimerContext } from './TimerProvider';\nimport Button from './Button';\nimport DisplayClock from './DisplayClock';\n//import React from 'react';\n\n\n\nconst Timer = ({id, xtime, ytime, countdown}) => {\n\n  console.log(\"In Timer\");\n  console.log(id, xtime, ytime, countdown);\n  let final_time = 0;\n\n  //const {active, setActive} = useContext(TimerContext);\n\n\n\n  if (countdown) {\n   final_time = xtime * 1000;\n  }\n  const [xTime, setXTime] = useState(final_time);\n\n  const [timerOn, setTimerOn] = useState(false);\n  const [phase, setPhase] = useState(\"\");\n  const [yTime, setYTime] = useState(ytime * 1000);\n\n  /*\n  const[round, setRound] = useState(rounds);\n  if (rounds < 1){\n    setRound(round => round = 1);\n    rounds = 1;\n  }\n  */\n\n  let yExists = false;\n  if (ytime > 0) {\n      yExists = true;\n  }\n\n  console.log(\"Marker 2\", yExists, ytime);\n\n\n  const current_phase = useRef(true);\n\n\n\n  useEffect(() => {\n    let interval = null;\n\n    let runx = xTime;\n    let runy = yTime;\n    let round_number = 1;\n\n    if (countdown) {\n      if (!yExists) {\n        setPhase(\"Countdown Clock\");\n      }\n      else {\n        setPhase(\"XY Clock\");\n      }\n    }\n    else {\n      setPhase(\"StopWatch\");\n    }\n\n    console.log(\"phase\", phase.current);\n\n    if (timerOn) {\n\n      interval = setInterval(() => {\n\n        console.log(\"in DisplayClock\", round_number);\n        if (current_phase.current) {\n\n          console.log(\"2\", current_phase.current);\n\n          if (countdown) {\n\n            console.log(\"2\", current_phase.current);\n            if (runx > 0 ){\n              runx = runx  - 10;\n              setXTime(xTime => xTime-10);\n              console.log(\"3\", xTime);\n            }\n            else {\n              if (yExists) {\n                current_phase.current = false;\n                setPhase(\"XY Clock: Y Phase\");\n              }\n              else {\n                return clearInterval(interval);\n              }\n                //return clearInterval(interval);\n            }\n          }\n          else {\n            if (runx < xtime * 1000){\n              runx = runx + 10;\n              setXTime(xTime => xTime + 10);\n            }\n            else {\n              if (yExists && countdown.current) {\n                current_phase.current = false;\n                setPhase(\"XY Clock: Y Phase\");\n              }\n              else {\n                return clearInterval(interval);\n              }\n            }\n          }\n          console.log(\"4\", \"I am here end of if\");\n\n        }\n        else {\n          if (runy > 0 ){\n            runy = runy  - 10;\n            setYTime(yTime => yTime-10);\n          }\n          else {\n            current_phase.current = true;\n              //setPhase(\"X and Y Phases Completed\");\n            return clearInterval(interval);\n          }\n        }\n\n\n      }, 10);\n\n    }\n    else {\n      return clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerOn, countdown, phase, xTime, xtime, yExists, yTime])\n\n\n  return (\n    <div key={id}>\n      <div>\n      {id > 1 &&\n      <span>----------------------------------------</span>\n      }\n      </div>\n      <div>\n        <span>Clock Number {id}: {phase}</span>\n        {phase === \"StopWatch\" && <span> with upper time limit of {xtime} minutes</span>}\n      </div>\n      <div>\n        <DisplayClock time={xTime}/>\n        {countdown && (ytime > 0) &&\n        <DisplayClock time={yTime}/>\n        }\n      </div>\n      <div>\n        <Button onClick={() => setTimerOn(true)}>Start</Button>\n        <Button onClick={() => setTimerOn(false)}>Stop</Button>\n        <Button onClick={() => setTimerOn(true)}>Resume</Button>\n        <Button onClick={() => {setXTime(final_time); setYTime(ytime*1000); setTimerOn(false);current_phase.current = true;}}>Reset</Button>\n      </div>\n    </div>\n\n  );\n\n}\n\n\n\n\nexport default Timer;\n","import React, { useContext } from 'react';\nimport { TimerContext } from './TimerProvider';\nimport Timer from './Timer';\n\n\nconst CreateWorkOut = () => {\n  return (\n\n      <TimerBlog />\n\n  );\n};\n\nconst TimerBlog = () => {\n  const { queue, addTimer, removeTimer } = useContext(TimerContext);\n  console.log(\"TimerBlog\", queue);\n  //const [indexToRemove, setIndexToRemove] = useState(0);\n  //if (selectedTimerId) return <Timer timerId = {selectedTimerId} />;\n  return (\n    <div>\n    <button\n      onClick ={() => {\n        addTimer({\n          id: (queue.length + 1),\n          xtime: Math.floor(Math.random()*10) + 3,\n          ytime: Math.floor(Math.random()*10) + 1,\n          countdown: Math.floor(Math.random()*2) === 1 ? true: false,\n        })\n      }}>Add Timer\n    </button>\n    <button\n      onClick = {() => {\n        let indexToRemove = ((queue.length - 1) > 0) ? (queue.length - 1) : 0;\n        removeTimer(indexToRemove);\n      }}> Remove Timer</button><br />\n    <span>----------------------------------------</span>\n\n    <div>\n        {queue.map((t, i) => (\n          <Timer id={t.id} xtime={t.xtime} ytime={t.ytime} countdown={t.countdown} />\n        ))}\n    </div>\n    </ div>\n  );\n};\n\n\n\n\nexport default CreateWorkOut;\n","import React,{ useContext, useState, useEffect, useRef } from 'react';\nimport { TimerContext } from './TimerProvider';\n//import Timer from './Timer';\n\nimport Button from './Button';\nimport DisplayClock from './DisplayClock';\n\nconst ExecuteWorkout = () => {\n  return (\n      <Workout />\n  );\n};\n\nconst Workout = () => {\n  const { queue } = useContext(TimerContext);\n  //const [indexToRemove, setIndexToRemove] = useState(0);\n  //if (selectedTimerId) return <Timer timerId = {selectedTimerId} />;\n  const [activeIndex, setActiveIndex] = useState(0);\n  //const [paused, setPaused] = useState(true);\n  const [phase, setPhase] = useState(\"\");\n  const [timerOn, setTimerOn] = useState(false);\n\n  const [xTime, setXTime] = useState(0);\n  const [yTime, setYTime] = useState(0);\n  const [finalTime, setFinalTime] = useState(0);\n  const [countdown, setCountdown] = useState(false);\n  const [clockCounter, setClockCounter] = useState(0);\n  const new_clock = useRef(true);\n  const y_exists = useRef(true);\n\n\n  let currentTimer = 0;\n  let currentXTime = 0;\n  let currentYTime = 0;\n  let currentCountdown = false;\n\n  useEffect(() => {\n    let interval = null;\n    if (timerOn) {\n      interval = setInterval(() => {\n        if (activeIndex >= queue.length) return;\n        currentXTime = queue[activeIndex].xtime*1000;\n        currentYTime = queue[activeIndex].ytime*1000;\n        currentCountdown = queue[activeIndex].countdown;\n        setCountdown(currentCountdown);\n        console.log(currentCountdown);\n        if (currentCountdown) {\n          if (currentYTime <= 0) {\n            setPhase(\"Countdown Clock\");\n          }\n          else {\n            setPhase(\"XY Clock\");\n          }\n        }\n        else {\n          setPhase(\"StopWatch\");\n          setFinalTime(currentXTime/1000);\n        }\n        if (new_clock.current) {\n          let final_time = 0;\n          if (currentCountdown) {\n            final_time = currentXTime;\n          }\n          setXTime(final_time);\n          setYTime(currentYTime);\n          new_clock.current = false;\n          setClockCounter(0);\n          if (countdown && yTime > 0) {\n            y_exists.current = true;\n          }\n        }\n\n        console.log(\"else currentXTime\", currentXTime);\n        console.log(\"else currentYTime\", currentYTime);\n        console.log(\"else currentcountdown\", countdown);\n        console.log(\"else currentTimer\", clockCounter);\n        if (clockCounter < currentXTime) {\n          console.log(\"xTime\", xTime);\n          if (countdown){\n            setXTime(xTime => xTime - 10);\n            setClockCounter(clockCounter => clockCounter + 10);\n          }\n          else {\n            setXTime(xTime => xTime + 10);\n            setClockCounter(clockCounter => clockCounter + 10);\n            console.log(\"in scond else xTime\", xTime);\n            console.log(\"in scond else currentTimer\", currentTimer);\n          }\n        }\n        else if (countdown === true && currentYTime > 0 ){\n          if (clockCounter < currentYTime + currentXTime) {\n            setYTime(yTime => yTime - 10);\n            setClockCounter(clockCounter => clockCounter + 10);\n          }\n        }\n        else {\n          console.log(\"I am here after ending the clock\");\n          if (activeIndex >= queue.length - 1) return;\n          setActiveIndex(activeIndex => activeIndex + 1);\n          new_clock.current = true;\n        }\n\n        // set the timer parameter\n      }, 10);\n\n    }\n    else {\n      return clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [timerOn, xTime, yTime])\n\n\n\n\n\n\n\n\n  console.log(\"Execute\", queue);\n\n\n  //resetTimer: () => setActive(0),\n\n  return (\n    <div id=\"workout\">\n      <div>\n        <Button onClick={() => setTimerOn(true)}>Start</Button>\n        <Button onClick={() => setTimerOn(false)}>Stop</Button>\n        <Button onClick={() => setTimerOn(true)}>Resume</Button>\n      </div><br/>\n        <span>----------------------------------------</span>\n        <div>\n          <span>Clock Number {activeIndex + 1}: {phase}</span>\n          {phase === \"StopWatch\" && <span> with upper time limit of {finalTime} seconds</span>}\n        </div>\n        <div>\n          <DisplayClock time={xTime}/>\n          {countdown && (yTime > 0) &&\n          <DisplayClock time={yTime}/>\n          }\n        </div>\n    </ div>\n  );\n};\n\n\n\n\nexport default ExecuteWorkout;\n","import {Link} from 'react-router-dom';\nimport React from 'react';\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>The Workout Machine</h1>\n      <div>\n        <Link to='/'>About</Link>\n        <Link to='/create'>Create Workout</Link>\n        <Link to='/execute'>Start Workout</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n//import './App.css';\nimport CreateWorkOut from './timer/TimerBlog';\nimport ExecuteWorkout from './timer/ExecuteWorkout';\nimport NavBar from './nav/NavBar';\nimport { BrowserRouter as Router, Route, Routes} from 'react-router-dom';\n\n//mport { ApolloClient, InMemoryCache, ApolloProvider, gql } from '@apollo/client';\n//import { ApolloClient, InMemoryCache, ApolloProvider } from 'apollo-client';\n//import { GraphQLClient } from 'graphql-request';\n//import { createStore } from 'redux';\nimport TimerProvider from './timer/TimerProvider';\n//import { Provider } from 'react-redux';\n//import {rootReducer} from './reducers/rootReducer';\n\n\nconst App = () => {\n  /*\n  const apolloClient = new ApolloClient ({\n    uri: \"https://api-us-west-2.hygraph.com/v2/clbr8d3xt0p3n01usciv50dks/master\",\n    cache: new InMemoryCache(),\n\n  });\n  */\n\n  //const store = createStore();\n\n  return (\n    /* <ApolloProvider client={apolloClient}> */\n    /* <Provider store={store}> */\n    <TimerProvider>\n    <Router>\n      <NavBar />\n      <div className = \"content\">\n        <Routes>\n          <Route exact path='/create' element={<CreateWorkOut />}/>\n          <Route exact path='/execute' element={<ExecuteWorkout />}/>\n        </Routes>\n      </div>\n    </Router>\n    </TimerProvider>\n    /* </Provider> */\n    /* </ApolloProvider> */\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}